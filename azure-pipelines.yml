jobs:
- job: JS_PreBuild_Checks
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
  - task: Bash@3
    inputs:
      targetType: inline
      script: echo FLOW check script
  - task: Bash@3
    inputs:
      targetType: inline
      script: echo ESLINT check script
  - task: Bash@3
    inputs:
      targetType: inline
      script: echo CIRCLE dependency check script

  - script: |
      npm install
      npm test
    
- job: Debug_Build
  pool:
    vmImage: 'macOS 10.13'
  dependsOn: JS_PreBuild_Checks
  condition: succeeded()
  strategy:
    maxParallel: 2
    matrix: 
      Android:
        TEST_ESLINT_CHECKS: 1
      iOS:
        TEST_ESLINT_CHECKS: 0
  steps: 
  - script: echo this is matrix ${TEST_ESLINT_CHECKS}
        
      


# - job: Android_Debug
#   pool:
#     vmImage: 'macOS 10.13'
#   dependsOn: JS_PreBuild_Checks
#   condition: succeeded()
#   steps:
#   - script: |
#       npm install
      
#   - task: Gradle@2
#     inputs:
#       workingDirectory: '$(system.defaultWorkingDirectory)/android'
#       gradleWrapperFile: '$(system.defaultWorkingDirectory)/android/gradlew'
#       gradleOptions: '-Xmx3072m'
#       publishJUnitResults: false
#       testResultsFiles: '**/TEST-*.xml'
#       tasks: 'assembleDebug'

#   - task: CopyFiles@2
#     inputs:
#       contents: '**/*.apk'
#       targetFolder: '$(build.artifactStagingDirectory)'

#   - task: PublishBuildArtifacts@1
#     inputs:
#       pathToPublish: '$(build.artifactStagingDirectory)'
#       artifactName: 'drop'
#       artifactType: 'container'

# - job: iOS_Debug
#   pool:
#     vmImage: 'macOS 10.13'
#   dependsOn: JS_PreBuild_Checks
#   condition: succeeded()
#   steps:
#   - script: echo hello from iOS Debug job
